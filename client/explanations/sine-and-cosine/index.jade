include ../../templates/common.jade

doctype html
html
  head
    include ../../templates/head
    include ../../templates/explanation-head
    link(rel="stylesheet" href= path + "style.css" type="text/css")
    script(type="text/x-mathjax-config").
      MathJax.Hub.Config({
        tex2jax: {
          inlineMath: [['$','$'], ['\\(','\\)']],
          skipTags: ["script","noscript","style","textarea","code"]
        }
      });
  body(ng-app="myApp" ng-controller="MainCtrl")
    section.menu
      a(href=basepath) Back
    section.title
      .title-region
        h1.title !{title}
        h3.by-line !{subtitle}
      +share
    section
      +authors
      p Sine and cosine &mdash; a.k.a., sin(θ) and cos(θ) &mdash; are functions revealing the shape of a right triangle. Looking out from a vertex with angle θ, sin(θ) is the ratio of the <tspan class="direct" style="background-color: #2ecc71;">opposite</tspan> side to the  <tspan class="direct" style="background-color: #9b59b6;">hypotenuse</tspan>, while cos(θ) is the ratio of the <tspan class="direct" style="background-color: #3498db;">adjacent</tspan> side to the <tspan class="direct" style="background-color: #9b59b6;">hypotenuse</tspan>. No matter the size of the triangle, the values of sin(θ) and cos(θ) are the same for a given θ, as illustrated below.

    section
      similar-triangles
      p Look at the left-most figure above (the unit circle). The triangle's hypotenuse has length 1, and so (conveniently!) the ratio of its adjacent to its hypotenuse is cos(θ), and the ratio of its opposite to the hypotenuse is sin(θ). Therefore, by placing triangles at the point (0,0) of the x/y plane, the functions sin(θ) and cos(θ) can be found by recording the values of x and y for every θ. Below, click play to see this process unfold. Angles are in <a href='http://en.wikipedia.org/wiki/Radian'>radians</a> (i.e., π/4, π/2,...).
      h1 Sin(θ)
      div(ng-controller="SineAnimationCtrl")
        ev-play-button(is-playing="opts.isPlaying" style="width:100%; height: 200px")
          trig-transform(func="sine")
    section(ng-controller="CosineAnimationCtrl")
      h1 Cos(θ)
      ev-play-button(is-playing="opts.isPlaying" style="width:100%; height: 200px")
        trig-transform(func="cosine")

    section
      p.
        Of course, computers and calculators don't actually draw circles to find sine and cosine. Instead, they use approximations like the <a href='http://en.wikipedia.org/wiki/Taylor_series'>Taylor series: </a>
        \[\begin{aligned}
          \sin{\theta} = θ - \frac{\theta^3}{3!} + \frac{\theta^5}{5!} -  \frac{\theta^7}{7!} \cdots \\
          \cos{\theta} = 1 - \frac{\theta^2}{2!} + \frac{\theta^4}{4!} -  \frac{\theta^6}{6!} \cdots
        \end{aligned} \]

    section(ng-controller="SineCosineLinkedCtrl")
      p Using sine and cosine, it's possible to describe any (<tspan style="color: #3498db;">x</tspan>,<tspan  style="color: #2ecc71;">y</tspan>) point as an alternative, (<tspan style="color: #9b59b6;">r</tspan>,<tspan  style="color: #c0392b;">θ</tspan>) point, where <tspan style="color: #9b59b6;">r</tspan> is the length of a segment from (0,0) to the point and <tspan  style="color: #c0392b;">θ</tspan> is the angle between that segment and the x-axis. This is called the <a href="http://en.wikipedia.org/wiki/Polar_coordinate_system">polar coordinate system</a>, and the conversion rule is (<tspan style="color: #3498db;">x</tspan>,<tspan  style="color: #2ecc71;">y</tspan>) = (<tspan style="color: #9b59b6;">r</tspan>cos(<tspan  style="color: #c0392b;">θ</tspan>),<tspan style="color: #9b59b6;">r</tspan>sin(<tspan  style="color: #c0392b;">θ</tspan> )). Play with the figures below to see real-time conversion between <a href='http://en.wikipedia.org/wiki/Cartesian_coordinate_system'>Cartesian</a> (i.e., x/y coordinates) and polar coordinates.
      //- unit-circle(system="cartesian" style="float:left;width:50%")
      //- unit-circle(system="polar" style="float:left;width:50%")

      
    section
      div(style="clear:both")
      linked-coordinates


    +footer
    +disqus

  script(async src="https://cdn.jsdelivr.net/npm/mathjax@2/unpacked/MathJax.js?config=default")

  script(src=path + "script.js")
